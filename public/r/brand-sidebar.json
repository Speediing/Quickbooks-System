{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "brand-sidebar",
  "type": "registry:component",
  "title": "Brand Sidebar",
  "description": "A styled, simple, reusable sidebar",
  "registryDependencies": [
    "badge",
    "button",
    "sidebar",
    "https://registry-starter.vercel.app/r/theme.json"
  ],
  "files": [
    {
      "path": "src/components/brand-sidebar.tsx",
      "content": "\"use client\";\n\nimport {\n  AlertTriangle,\n  BarChart2,\n  Clock,\n  Database,\n  Home,\n  LayoutGrid,\n  MessageSquareText,\n  MoreHorizontal,\n  Plus,\n  Table,\n} from \"lucide-react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport type * as React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarSeparator,\n  useSidebar,\n} from \"@/components/ui/sidebar\";\nimport { cn } from \"@/lib/utils\";\n\ninterface NavItem {\n  title: string;\n  href: string;\n  icon: React.ReactNode;\n  badge?: {\n    text: string;\n  };\n}\n\ninterface SidebarProps {\n  collapsed?: boolean;\n  onToggle?: () => void;\n  className?: string;\n}\n\nexport function BrandSidebar({\n  collapsed = false,\n  onToggle,\n  className,\n}: SidebarProps) {\n  const pathname = usePathname();\n  const { state } = useSidebar();\n  const isCollapsed = state === \"collapsed\";\n\n  const mainNavItems: NavItem[] = [\n    {\n      title: \"Dashboard\",\n      href: \"#\",\n      icon: <Home className=\"size-4\" />,\n    },\n    {\n      title: \"Sales\",\n      href: \"#sales\",\n      icon: <BarChart2 className=\"size-4\" />,\n    },\n    {\n      title: \"Expenses\",\n      href: \"#expenses\",\n      icon: <Database className=\"size-4\" />,\n    },\n    {\n      title: \"Banking\",\n      href: \"#banking\",\n      icon: <Table className=\"size-4\" />,\n    },\n    {\n      title: \"Reports\",\n      href: \"#reports\",\n      icon: <MessageSquareText className=\"size-4\" />,\n    },\n  ];\n\n  const toolsNavItems: NavItem[] = [\n    {\n      title: \"Taxes\",\n      href: \"#taxes\",\n      icon: <AlertTriangle className=\"size-4\" />,\n    },\n    {\n      title: \"Payroll\",\n      href: \"#payroll\",\n      icon: <BarChart2 className=\"size-4\" />,\n    },\n    {\n      title: \"Accounting\",\n      href: \"#accounting\",\n      icon: <Clock className=\"size-4\" />,\n    },\n    {\n      title: \"Settings\",\n      href: \"#settings\",\n      icon: <MoreHorizontal className=\"size-4\" />,\n    },\n  ];\n\n  return (\n    <Sidebar\n      variant=\"sidebar\"\n      collapsible=\"icon\"\n      className=\"mt-16 bg-[var(--color-container-background-secondary)] border-r border-[var(--color-container-border-primary)]\"\n    >\n      <SidebarHeader>\n        <div className={cn(isCollapsed ? \"py-2\" : \"p-2\")}>\n          <Button\n            className={cn(\n              isCollapsed ? \"h-8 w-8 p-0\" : \"w-full\",\n              \"bg-[var(--color-ui-primary)] text-[var(--color-text-accent)] hover:bg-[var(--color-ui-primary-hover)]\"\n            )}\n          >\n            <Plus className={cn(\"size-4\", !isCollapsed && \"mr-1\")} />\n            {!isCollapsed && <span>Create</span>}\n          </Button>\n        </div>\n      </SidebarHeader>\n\n      <SidebarContent>\n        {/* Main Nav Items */}\n        <SidebarGroup>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {mainNavItems.map((item) => (\n                <SidebarMenuItem key={item.href}>\n                  <SidebarMenuButton\n                    asChild\n                    isActive={\n                      pathname === item.href ||\n                      (pathname === \"\" && item.href === \"/\")\n                    }\n                    tooltip={item.title}\n                    className=\"text-[var(--color-text-primary)] hover:bg-[var(--color-container-background-accent-hover)] data-[active=true]:bg-[var(--color-container-background-accent-selected)] data-[active=true]:text-[var(--color-text-primary)]\"\n                  >\n                    <Link href={item.href}>\n                      {item.icon}\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                  {item.badge && (\n                    <SidebarMenuBadge\n                      className={cn(\n                        \"border border-[var(--color-container-border-primary)] bg-[var(--color-container-background-accent)] text-[var(--color-text-primary)]\"\n                      )}\n                    >\n                      {item.badge.text}\n                    </SidebarMenuBadge>\n                  )}\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n\n        <SidebarSeparator className=\"border-[var(--color-container-border-tertiary)]\" />\n\n        {/* Tools Nav Items */}\n        <SidebarGroup>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {toolsNavItems.map((item) => (\n                <SidebarMenuItem key={item.href}>\n                  <SidebarMenuButton\n                    asChild\n                    isActive={pathname === item.href}\n                    tooltip={item.title}\n                    className=\"text-[var(--color-text-primary)] hover:bg-[var(--color-container-background-accent-hover)] data-[active=true]:bg-[var(--color-container-background-accent-selected)] data-[active=true]:text-[var(--color-text-primary)]\"\n                  >\n                    <Link href={item.href}>\n                      {item.icon}\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                  {item.badge && (\n                    <SidebarMenuBadge\n                      className={cn(\n                        \"border border-[var(--color-container-border-primary)] bg-[var(--color-container-background-accent)] text-[var(--color-text-primary)]\"\n                      )}\n                    >\n                      {item.badge.text}\n                    </SidebarMenuBadge>\n                  )}\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}
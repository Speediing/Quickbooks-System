{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard",
  "type": "registry:block",
  "title": "Dashboard Starter",
  "description": "A dashboard application with your brand themed components",
  "files": [
    {
      "path": "src/app/globals.css",
      "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Base colors */\n  --background: #f5f5f5;\n  --foreground: #2c2c2c;\n  --card: #ffffff;\n  --card-foreground: #2c2c2c;\n  --popover: #ffffff;\n  --popover-foreground: #2c2c2c;\n  \n  /* Primary colors - QuickBooks blue */\n  --primary: #2CA01C;\n  --primary-foreground: #ffffff;\n  --secondary: #f0f0f0;\n  --secondary-foreground: #2c2c2c;\n  \n  /* UI elements */\n  --muted: #f5f5f5;\n  --muted-foreground: #666666;\n  --accent: #2CA01C;\n  --accent-foreground: #ffffff;\n  \n  /* State colors */\n  --destructive: #dc2626;\n  --destructive-foreground: #ffffff;\n  \n  /* Border and input */\n  --border: #e5e5e5;\n  --input: #e5e5e5;\n  --ring: #2CA01C;\n  \n  /* Chart colors */\n  --chart-1: #2CA01C;\n  --chart-2: #4CAF50;\n  --chart-3: #81C784;\n  --chart-4: #A5D6A7;\n  --chart-5: #C8E6C9;\n  \n  /* Sidebar */\n  --sidebar: #2c2c2c;\n  --sidebar-foreground: #ffffff;\n  --sidebar-primary: #2CA01C;\n  --sidebar-primary-foreground: #ffffff;\n  --sidebar-accent: #2CA01C;\n  --sidebar-accent-foreground: #ffffff;\n  --sidebar-border: #404040;\n  --sidebar-ring: #2CA01C;\n  \n  /* Typography */\n  --font-sans: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n  --font-serif: Georgia, Cambria, \"Times New Roman\", Times, serif;\n  --font-mono: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  \n  /* Border radius */\n  --radius: 0.375rem;\n  \n  /* Shadows */\n  --shadow-2xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n  --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n  --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n  --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\n  --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n}\n\n/* Dark mode variables */\n[data-theme=\"dark\"] {\n  --background: #282828;\n  --foreground: #eceef1;\n  --card: #363639;\n  --card-foreground: #eceef1;\n  --popover: #363639;\n  --popover-foreground: #eceef1;\n  \n  --primary: #53b700;\n  --primary-foreground: #282828;\n  --secondary: #393a3d;\n  --secondary-foreground: #eceef1;\n  \n  --muted: #393a3d;\n  --muted-foreground: #babec5;\n  --accent: #53b700;\n  --accent-foreground: #282828;\n  \n  --destructive: #ff8979;\n  --destructive-foreground: #282828;\n  \n  --border: #6b6c72;\n  --input: #6b6c72;\n  --ring: #53b700;\n  \n  --chart-1: #34bfff;\n  --chart-2: #008481;\n  --chart-3: #9457fa;\n  --chart-4: #ff9331;\n  --chart-5: #f25a52;\n  \n  --sidebar: #282828;\n  --sidebar-foreground: #eceef1;\n  --sidebar-primary: #53b700;\n  --sidebar-primary-foreground: #282828;\n  --sidebar-accent: #53b700;\n  --sidebar-accent-foreground: #282828;\n  --sidebar-border: #6b6c72;\n  --sidebar-ring: #53b700;\n}\n\n@layer base {\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n",
      "type": "registry:file",
      "target": "app/globals.css"
    },
    {
      "path": "tailwind.config.ts",
      "content": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  darkMode: 'class',\n  theme: {\n    extend: {\n      colors: {\n        // Base colors\n        background: 'var(--background)',\n        foreground: 'var(--foreground)',\n        card: 'var(--card)',\n        'card-foreground': 'var(--card-foreground)',\n        popover: 'var(--popover)',\n        'popover-foreground': 'var(--popover-foreground)',\n        \n        // Primary colors\n        primary: {\n          DEFAULT: 'var(--primary)',\n          foreground: 'var(--primary-foreground)',\n        },\n        secondary: {\n          DEFAULT: 'var(--secondary)',\n          foreground: 'var(--secondary-foreground)',\n        },\n        \n        // UI elements\n        muted: {\n          DEFAULT: 'var(--muted)',\n          foreground: 'var(--muted-foreground)',\n        },\n        accent: {\n          DEFAULT: 'var(--accent)',\n          foreground: 'var(--accent-foreground)',\n        },\n        \n        // State colors\n        destructive: {\n          DEFAULT: 'var(--destructive)',\n          foreground: 'var(--destructive-foreground)',\n        },\n        \n        // Border and input\n        border: 'var(--border)',\n        input: 'var(--input)',\n        ring: 'var(--ring)',\n        \n        // Chart colors\n        chart: {\n          1: 'var(--chart-1)',\n          2: 'var(--chart-2)',\n          3: 'var(--chart-3)',\n          4: 'var(--chart-4)',\n          5: 'var(--chart-5)',\n        },\n        \n        // Sidebar\n        sidebar: {\n          DEFAULT: 'var(--sidebar)',\n          foreground: 'var(--sidebar-foreground)',\n          primary: 'var(--sidebar-primary)',\n          'primary-foreground': 'var(--sidebar-primary-foreground)',\n          accent: 'var(--sidebar-accent)',\n          'accent-foreground': 'var(--sidebar-accent-foreground)',\n          border: 'var(--sidebar-border)',\n          ring: 'var(--sidebar-ring)',\n        },\n      },\n      fontFamily: {\n        sans: 'var(--font-sans)',\n        serif: 'var(--font-serif)',\n        mono: 'var(--font-mono)',\n      },\n      borderRadius: {\n        DEFAULT: 'var(--radius)',\n      },\n      boxShadow: {\n        '2xs': 'var(--shadow-2xs)',\n        xs: 'var(--shadow-xs)',\n        sm: 'var(--shadow-sm)',\n        DEFAULT: 'var(--shadow)',\n        md: 'var(--shadow-md)',\n        lg: 'var(--shadow-lg)',\n        xl: 'var(--shadow-xl)',\n        '2xl': 'var(--shadow-2xl)',\n      },\n    },\n  },\n  plugins: [],\n} ",
      "type": "registry:file",
      "target": "tailwind.config.ts"
    },
    {
      "path": "src/app/starter/dashboard/root-layout.tsx",
      "content": "import { VercelToolbar } from \"@vercel/toolbar/next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\nimport { Toaster } from \"sonner\";\n\nimport { BrandHeader } from \"@/components/brand-header\";\nimport { BrandSidebar } from \"@/components/brand-sidebar\";\nimport { SidebarProvider } from \"@/components/ui/sidebar\";\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/globals.css\";\n\nconst geist = Geist({ subsets: [\"latin\"] });\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" className={cn(geist.className, \"bg-background\")}>\n      <body>\n        <SidebarProvider>\n          <BrandHeader />\n          <BrandSidebar />\n          <main className=\"mt-16 flex w-full justify-center\">\n            <div className=\"container\">{children}</div>\n          </main>\n          <Toaster />\n        </SidebarProvider>\n\n        {process.env.NODE_ENV === \"development\" && <VercelToolbar />}\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    },
    {
      "path": "src/app/starter/dashboard/page.tsx",
      "content": "export default function StarterPage() {\n  return (\n    <div className=\"flex min-h-[90vh] flex-col items-center justify-center gap-4 rounded-md bg-background\">\n      <h1 className=\"text-2xl font-sans font-semibold text-primary\">\n        Quickbooks design system\n      </h1>\n      <div className=\"min-w-32 text-muted-foreground\">Get started</div>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/page.tsx"
    },
    {
      "path": "src/components/brand-header.tsx",
      "content": "\"use client\";\n\nimport {\n  Bell,\n  HelpCircle,\n  Menu,\n  Plus,\n  Search,\n  Settings,\n  X,\n} from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useSidebar } from \"@/components/ui/sidebar\";\n\nimport { Logo } from \"./logo\";\n\nexport function BrandHeader() {\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const { state, toggleSidebar } = useSidebar();\n  const isCollapsed = state === \"collapsed\";\n\n  return (\n    <header className=\"fixed z-50 w-full border-b border-border bg-background\">\n      <div className=\"flex h-16 items-center justify-between px-4\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"hidden size-8 md:flex text-foreground hover:bg-muted\"\n            onClick={toggleSidebar}\n          >\n            {isCollapsed ? (\n              <Menu className=\"size-4\" />\n            ) : (\n              <X className=\"size-4\" />\n            )}\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"size-8 md:hidden text-foreground hover:bg-muted\"\n            onClick={toggleSidebar}\n          >\n            <Menu className=\"size-4\" />\n          </Button>\n\n          <Link href=\"/\" className=\"flex items-center\">\n            <Logo />\n          </Link>\n        </div>\n\n        <div className=\"hidden items-center space-x-4 md:flex\">\n          <div className=\"relative\">\n            <Input\n              type=\"text\"\n              placeholder=\"Search (Ctrl + /)\"\n              className=\"h-9 w-96 pl-9 bg-background border-input text-foreground placeholder:text-muted-foreground\"\n            />\n            <Search className=\"absolute top-2.5 left-3 size-4 text-muted-foreground\" />\n          </div>\n\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-foreground hover:bg-muted\"\n          >\n            <Plus className=\"mr-2 size-4\" />\n            New\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-foreground hover:bg-muted\"\n          >\n            <Bell className=\"mr-2 size-4\" />\n            Notifications\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-foreground hover:bg-muted\"\n          >\n            <HelpCircle className=\"mr-2 size-4\" />\n            Help\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-foreground hover:bg-muted\"\n          >\n            <Settings className=\"mr-2 size-4\" />\n            Settings\n          </Button>\n\n          <Avatar className=\"size-8\">\n            <AvatarFallback className=\"bg-primary text-primary-foreground\">\n              <span className=\"text-xs\">ME</span>\n            </AvatarFallback>\n          </Avatar>\n        </div>\n\n        <div className=\"flex gap-2 md:hidden\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-foreground hover:bg-muted\"\n          >\n            <Search className=\"h-5 w-5\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-foreground hover:bg-muted\"\n          >\n            <Bell className=\"h-5 w-5\" />\n          </Button>\n          <Avatar className=\"size-8\">\n            <AvatarFallback className=\"bg-primary text-primary-foreground\">\n              <span className=\"text-xs\">ME</span>\n            </AvatarFallback>\n          </Avatar>\n        </div>\n      </div>\n    </header>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/logo.tsx",
      "content": "export function Logo() {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        className=\"size-8\"\n        role=\"graphics-symbol\"\n      >\n        <path\n          className=\"fill-primary\"\n          d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z\"\n        />\n      </svg>\n\n      <h1 className=\"text-xl font-bold text-primary\">QuickBooks</h1>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/brand-sidebar.tsx",
      "content": "\"use client\";\n\nimport {\n  AlertTriangle,\n  BarChart2,\n  Clock,\n  Database,\n  Home,\n  LayoutGrid,\n  MessageSquareText,\n  MoreHorizontal,\n  Plus,\n  Table,\n} from \"lucide-react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport type * as React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarSeparator,\n  useSidebar,\n} from \"@/components/ui/sidebar\";\nimport { cn } from \"@/lib/utils\";\n\ninterface NavItem {\n  title: string;\n  href: string;\n  icon: React.ReactNode;\n  badge?: {\n    text: string;\n  };\n}\n\ninterface SidebarProps {\n  collapsed?: boolean;\n  onToggle?: () => void;\n  className?: string;\n}\n\nexport function BrandSidebar({\n  collapsed = false,\n  onToggle,\n  className,\n}: SidebarProps) {\n  const pathname = usePathname();\n  const { state } = useSidebar();\n  const isCollapsed = state === \"collapsed\";\n\n  const mainNavItems: NavItem[] = [\n    {\n      title: \"Dashboard\",\n      href: \"#\",\n      icon: <Home className=\"size-4\" />,\n    },\n    {\n      title: \"Sales\",\n      href: \"#sales\",\n      icon: <BarChart2 className=\"size-4\" />,\n    },\n    {\n      title: \"Expenses\",\n      href: \"#expenses\",\n      icon: <Database className=\"size-4\" />,\n    },\n    {\n      title: \"Banking\",\n      href: \"#banking\",\n      icon: <Table className=\"size-4\" />,\n    },\n    {\n      title: \"Reports\",\n      href: \"#reports\",\n      icon: <MessageSquareText className=\"size-4\" />,\n    },\n  ];\n\n  const toolsNavItems: NavItem[] = [\n    {\n      title: \"Taxes\",\n      href: \"#taxes\",\n      icon: <AlertTriangle className=\"size-4\" />,\n    },\n    {\n      title: \"Payroll\",\n      href: \"#payroll\",\n      icon: <BarChart2 className=\"size-4\" />,\n    },\n    {\n      title: \"Accounting\",\n      href: \"#accounting\",\n      icon: <Clock className=\"size-4\" />,\n    },\n    {\n      title: \"Settings\",\n      href: \"#settings\",\n      icon: <MoreHorizontal className=\"size-4\" />,\n    },\n  ];\n\n  return (\n    <Sidebar className=\"mt-16 bg-muted border-r border-border\">\n      <SidebarHeader>\n        <div className={cn(isCollapsed ? \"py-2\" : \"p-2\")}>\n          <Button\n            className={cn(\n              isCollapsed ? \"h-8 w-8 p-0\" : \"w-full\",\n              \"bg-primary text-primary-foreground hover:bg-primary/90\"\n            )}\n          >\n            <Plus className={cn(\"size-4\", !isCollapsed && \"mr-1\")} />\n            {!isCollapsed && <span>Create</span>}\n          </Button>\n        </div>\n      </SidebarHeader>\n\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {mainNavItems.map((item) => (\n                <SidebarMenuItem key={item.title}>\n                  <SidebarMenuButton\n                    asChild\n                    isActive={pathname === item.href}\n                    tooltip={item.title}\n                    className=\"text-foreground hover:bg-muted data-[active=true]:bg-muted/80 data-[active=true]:text-foreground\"\n                  >\n                    <Link href={item.href}>\n                      {item.icon}\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                  {item.badge && (\n                    <SidebarMenuBadge\n                      className={cn(\n                        \"border border-border bg-muted text-foreground\"\n                      )}\n                    >\n                      {item.badge.text}\n                    </SidebarMenuBadge>\n                  )}\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n\n        <SidebarSeparator className=\"border-border/50\" />\n\n        {/* Tools Nav Items */}\n        <SidebarGroup>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {toolsNavItems.map((item) => (\n                <SidebarMenuItem key={item.title}>\n                  <SidebarMenuButton\n                    asChild\n                    isActive={pathname === item.href}\n                    tooltip={item.title}\n                    className=\"text-foreground hover:bg-muted data-[active=true]:bg-muted/80 data-[active=true]:text-foreground\"\n                  >\n                    <Link href={item.href}>\n                      {item.icon}\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                  {item.badge && (\n                    <SidebarMenuBadge\n                      className={cn(\n                        \"border border-border bg-muted text-foreground\"\n                      )}\n                    >\n                      {item.badge.text}\n                    </SidebarMenuBadge>\n                  )}\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}
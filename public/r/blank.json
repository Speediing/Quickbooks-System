{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "blank",
  "type": "registry:block",
  "title": "Blank Starter",
  "description": "A blank application with all brand components and code",
  "files": [
    {
      "path": "src/app/globals.css",
      "content": ":root {\n  --background: oklch(0.97 0.01 80.72);\n  --foreground: oklch(0.3 0.04 30.2);\n  --card: oklch(0.97 0.01 80.72);\n  --card-foreground: oklch(0.3 0.04 30.2);\n  --popover: oklch(0.97 0.01 80.72);\n  --popover-foreground: oklch(0.3 0.04 30.2);\n  --primary: oklch(0.52 0.13 144.17);\n  --primary-foreground: oklch(1.0 0 0);\n  --secondary: oklch(0.96 0.02 147.64);\n  --secondary-foreground: oklch(0.43 0.12 144.31);\n  --muted: oklch(0.94 0.01 74.42);\n  --muted-foreground: oklch(0.45 0.05 39.21);\n  --accent: oklch(0.9 0.05 146.04);\n  --accent-foreground: oklch(0.43 0.12 144.31);\n  --destructive: oklch(0.54 0.19 26.72);\n  --destructive-foreground: oklch(1.0 0 0);\n  --border: oklch(0.88 0.02 74.64);\n  --input: oklch(0.88 0.02 74.64);\n  --ring: oklch(0.52 0.13 144.17);\n\n  --chart-1: oklch(0.67 0.16 144.21);\n  --chart-2: oklch(0.58 0.14 144.18);\n  --chart-3: oklch(0.52 0.13 144.17);\n  --chart-4: oklch(0.43 0.12 144.31);\n  --chart-5: oklch(0.22 0.05 145.73);\n\n  --sidebar: oklch(0.94 0.01 74.42);\n  --sidebar-foreground: oklch(0.3 0.04 30.2);\n  --sidebar-primary: oklch(0.52 0.13 144.17);\n  --sidebar-primary-foreground: oklch(1.0 0 0);\n  --sidebar-accent: oklch(0.9 0.05 146.04);\n  --sidebar-accent-foreground: oklch(0.43 0.12 144.31);\n  --sidebar-border: oklch(0.88 0.02 74.64);\n  --sidebar-ring: oklch(0.52 0.13 144.17);\n\n  --font-sans: Montserrat, sans-serif;\n  --font-serif: Merriweather, serif;\n  --font-mono: Source Code Pro, monospace;\n\n  --radius: 0.5rem;\n\n  --shadow-2xs: 0 1px 3px 0px hsl(0 0% 0% / 0.05);\n  --shadow-xs: 0 1px 3px 0px hsl(0 0% 0% / 0.05);\n  --shadow-sm: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 1px 2px -1px\n    hsl(0 0% 0% / 0.1);\n  --shadow: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 1px 2px -1px hsl(0 0% 0% / 0.1);\n  --shadow-md: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 2px 4px -1px\n    hsl(0 0% 0% / 0.1);\n  --shadow-lg: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 4px 6px -1px\n    hsl(0 0% 0% / 0.1);\n  --shadow-xl: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 8px 10px -1px\n    hsl(0 0% 0% / 0.1);\n  --shadow-2xl: 0 1px 3px 0px hsl(0 0% 0% / 0.25);\n}\n\n.dark {\n  --background: oklch(0.27 0.03 150.77);\n  --foreground: oklch(0.94 0.01 72.66);\n\n  --card: oklch(0.33 0.03 146.99);\n  --card-foreground: oklch(0.94 0.01 72.66);\n  --popover: oklch(0.33 0.03 146.99);\n  --popover-foreground: oklch(0.94 0.01 72.66);\n  --primary: oklch(0.67 0.16 144.21);\n  --primary-foreground: oklch(0.22 0.05 145.73);\n\n  --secondary: oklch(0.39 0.03 142.99);\n  --secondary-foreground: oklch(0.9 0.02 142.55);\n  --muted: oklch(0.33 0.03 146.99);\n  --muted-foreground: oklch(0.86 0.02 76.1);\n  --accent: oklch(0.58 0.14 144.18);\n  --accent-foreground: oklch(0.94 0.01 72.66);\n  --destructive: oklch(0.54 0.19 26.72);\n  --destructive-foreground: oklch(0.94 0.01 72.66);\n  --border: oklch(0.39 0.03 142.99);\n  --input: oklch(0.39 0.03 142.99);\n  --ring: oklch(0.67 0.16 144.21);\n\n  --chart-1: oklch(0.77 0.12 145.3);\n  --chart-2: oklch(0.72 0.14 144.89);\n  --chart-3: oklch(0.67 0.16 144.21);\n  --chart-4: oklch(0.63 0.15 144.2);\n  --chart-5: oklch(0.58 0.14 144.18);\n\n  --sidebar: oklch(0.27 0.03 150.77);\n  --sidebar-foreground: oklch(0.94 0.01 72.66);\n  --sidebar-primary: oklch(0.67 0.16 144.21);\n  --sidebar-primary-foreground: oklch(0.22 0.05 145.73);\n  --sidebar-accent: oklch(0.58 0.14 144.18);\n  --sidebar-accent-foreground: oklch(0.94 0.01 72.66);\n  --sidebar-border: oklch(0.39 0.03 142.99);\n  --sidebar-ring: oklch(0.67 0.16 144.21);\n\n  --radius: 0.5rem;\n\n  --shadow-2xs: 0 1px 3px 0px hsl(0 0% 0% / 0.05);\n  --shadow-xs: 0 1px 3px 0px hsl(0 0% 0% / 0.05);\n  --shadow-sm: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 1px 2px -1px\n    hsl(0 0% 0% / 0.1);\n  --shadow: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 1px 2px -1px hsl(0 0% 0% / 0.1);\n  --shadow-md: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 2px 4px -1px\n    hsl(0 0% 0% / 0.1);\n  --shadow-lg: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 4px 6px -1px\n    hsl(0 0% 0% / 0.1);\n  --shadow-xl: 0 1px 3px 0px hsl(0 0% 0% / 0.1), 0 8px 10px -1px\n    hsl(0 0% 0% / 0.1);\n  --shadow-2xl: 0 1px 3px 0px hsl(0 0% 0% / 0.25);\n}\n",
      "type": "registry:file",
      "target": "app/globals.css"
    },
    {
      "path": "src/app/starter/tailwind.config.ts",
      "content": "import type { Config } from \"tailwindcss\";\n\nconst config: Config = {\n  content: [\n    \"./pages/**/*.{ts,tsx,js,jsx,mdx}\",\n    \"./components/**/*.{ts,tsx,js,jsx,mdx}\",\n    \"./app/**/*.{ts,tsx,js,jsx,mdx}\",\n    \"*.{ts,tsx,js,jsx,mdx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n\n        card: \"var(--card)\",\n        \"card-foreground\": \"var(--card-foreground)\",\n\n        popover: \"var(--popover)\",\n        \"popover-foreground\": \"var(--popover-foreground)\",\n\n        primary: \"var(--primary)\",\n        \"primary-foreground\": \"var(--primary-foreground)\",\n\n        secondary: \"var(--secondary)\",\n        \"secondary-foreground\": \"var(--secondary-foreground)\",\n\n        muted: \"var(--muted)\",\n        \"muted-foreground\": \"var(--muted-foreground)\",\n\n        accent: \"var(--accent)\",\n        \"accent-foreground\": \"var(--accent-foreground)\",\n\n        destructive: \"var(--destructive)\",\n        \"destructive-foreground\": \"var(--destructive-foreground)\",\n\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n\n        chart: {\n          1: \"var(--chart-1)\",\n          2: \"var(--chart-2)\",\n          3: \"var(--chart-3)\",\n          4: \"var(--chart-4)\",\n          5: \"var(--chart-5)\",\n        },\n\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      boxShadow: {\n        \"2xs\": \"var(--shadow-2xs)\",\n        xs: \"var(--shadow-xs)\",\n        sm: \"var(--shadow-sm)\",\n        DEFAULT: \"var(--shadow)\",\n        md: \"var(--shadow-md)\",\n        lg: \"var(--shadow-lg)\",\n        xl: \"var(--shadow-xl)\",\n        \"2xl\": \"var(--shadow-2xl)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\", \"sans-serif\"],\n        serif: [\"var(--font-serif)\", \"serif\"],\n        mono: [\"var(--font-mono)\", \"monospace\"],\n      },\n      keyframes: {\n        \"fade-in-scale\": {\n          \"0%\": { opacity: \"0\", transform: \"scale(0.95)\" },\n          \"100%\": { opacity: \"1\", transform: \"scale(1)\" },\n        },\n      },\n      animation: {\n        \"fade-in-scale\": \"fade-in-scale 0.3s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n};\nexport default config;\n",
      "type": "registry:file",
      "target": "tailwind.config.ts"
    },
    {
      "path": "src/app/starter/blank/root-layout.tsx",
      "content": "import type React from \"react\";\nimport { Toaster } from \"sonner\";\n\nimport { SidebarProvider } from \"@/components/ui/sidebar\";\n\nimport \"@/app/globals.css\";\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <SidebarProvider>\n      {children}\n      <Toaster />\n    </SidebarProvider>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    },
    {
      "path": "src/app/starter/blank/page.tsx",
      "content": "export default async function Store() {\n  return <div className=\"flex min-h-screen flex-col\" />;\n}\n",
      "type": "registry:page",
      "target": "app/page.tsx"
    },
    {
      "path": "src/components/brand-header.tsx",
      "content": "\"use client\";\n\nimport { HelpCircle, Menu, Search, X } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useSidebar } from \"@/components/ui/sidebar\";\n\nimport { Logo } from \"./logo\";\n\nexport function BrandHeader() {\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const { state, toggleSidebar } = useSidebar();\n  const isCollapsed = state === \"collapsed\";\n\n  return (\n    <header className=\"fixed z-50 w-full border-border border-b bg-background\">\n      <div className=\"flex h-16 items-center justify-between px-2\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"hidden size-8 md:flex\"\n            onClick={toggleSidebar}\n          >\n            {isCollapsed ? (\n              <Menu className=\"size-4\" />\n            ) : (\n              <X className=\"size-4\" />\n            )}\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"size-8 md:hidden\"\n            onClick={toggleSidebar}\n          >\n            <Menu className=\"size-4\" />\n          </Button>\n\n          <Link href=\"/\" className=\"flex items-center\">\n            <Logo />\n          </Link>\n        </div>\n\n        <div className=\"hidden items-center space-x-1 md:flex\">\n          {isSearchOpen ? (\n            <div className=\"relative\">\n              <Input\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"h-9 w-64 pl-9\"\n                autoFocus\n                onBlur={() => setIsSearchOpen(false)}\n              />\n              <Search className=\"absolute top-2.5 left-3 size-4 text-foreground\" />\n            </div>\n          ) : (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-foreground\"\n              onClick={() => setIsSearchOpen(true)}\n            >\n              <Search className=\"mr-2 size-4\" />\n              Search\n            </Button>\n          )}\n\n          <Button variant=\"ghost\" size=\"sm\" className=\"text-foreground\">\n            <HelpCircle className=\"mr-2 size-4\" />\n            Support\n          </Button>\n\n          <Button variant=\"ghost\" size=\"sm\" className=\"text-foreground\">\n            Upgrade Trial\n          </Button>\n\n          <Avatar className=\"size-8\">\n            <AvatarFallback className=\"bg-primary text-primary-foreground\">\n              <span className=\"text-xs\">ME</span>\n            </AvatarFallback>\n          </Avatar>\n        </div>\n\n        <div className=\"flex gap-2 md:hidden\">\n          <Button variant=\"ghost\" size=\"sm\" className=\"text-foreground\">\n            <Search className=\"h-5 w-5\" />\n          </Button>\n          <Avatar className=\"size-8\">\n            <AvatarFallback className=\"bg-primary text-primary-foreground\">\n              <span className=\"text-xs\">ME</span>\n            </AvatarFallback>\n          </Avatar>\n        </div>\n      </div>\n    </header>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/logo.tsx",
      "content": "export function Logo() {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"size-8\"\n        role=\"graphics-symbol\"\n      >\n        <circle className=\"fill-primary\" cx=\"13.5\" cy=\"6.5\" r=\"2.5\" />\n        <circle className=\"fill-primary\" cx=\"19\" cy=\"13\" r=\"2.5\" />\n        <circle className=\"fill-primary\" cx=\"13.5\" cy=\"19.5\" r=\"2.5\" />\n        <circle className=\"fill-primary\" cx=\"6.5\" cy=\"13\" r=\"2.5\" />\n      </svg>\n\n      <h1 className=\"font-bold\">Brand Name</h1>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/brand-sidebar.tsx",
      "content": "\"use client\";\n\nimport {\n  AlertTriangle,\n  BarChart2,\n  Clock,\n  Database,\n  Home,\n  LayoutGrid,\n  MessageSquareText,\n  MoreHorizontal,\n  Plus,\n  Table,\n} from \"lucide-react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport type * as React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarSeparator,\n  useSidebar,\n} from \"@/components/ui/sidebar\";\nimport { cn } from \"@/lib/utils\";\n\ninterface NavItem {\n  title: string;\n  href: string;\n  icon: React.ReactNode;\n  badge?: {\n    text: string;\n  };\n}\n\ninterface SidebarProps {\n  collapsed?: boolean;\n  onToggle?: () => void;\n  className?: string;\n}\n\nexport function BrandSidebar({\n  collapsed = false,\n  onToggle,\n  className,\n}: SidebarProps) {\n  const pathname = usePathname();\n  const { state } = useSidebar();\n  const isCollapsed = state === \"collapsed\";\n\n  const mainNavItems: NavItem[] = [\n    {\n      title: \"Home\",\n      href: \"#\",\n      icon: <Home className=\"size-4\" />,\n    },\n    {\n      title: \"Projects\",\n      href: \"#projects\",\n      icon: <LayoutGrid className=\"size-4\" />,\n    },\n    {\n      title: \"Databases\",\n      href: \"#databases\",\n      icon: <Database className=\"size-4\" />,\n    },\n    {\n      title: \"Tables\",\n      href: \"#tables\",\n      icon: <Table className=\"size-4\" />,\n      badge: {\n        text: \"Beta\",\n      },\n    },\n    {\n      title: \"AI\",\n      href: \"#ai\",\n      icon: <MessageSquareText className=\"size-4\" />,\n      badge: {\n        text: \"Alpha\",\n      },\n    },\n  ];\n\n  const toolsNavItems: NavItem[] = [\n    {\n      title: \"Alerts\",\n      href: \"#alerts\",\n      icon: <AlertTriangle className=\"size-4\" />,\n    },\n    {\n      title: \"Analytics\",\n      href: \"#analytics\",\n      icon: <BarChart2 className=\"size-4\" />,\n    },\n    {\n      title: \"History\",\n      href: \"#history\",\n      icon: <Clock className=\"size-4\" />,\n    },\n    {\n      title: \"More\",\n      href: \"#more\",\n      icon: <MoreHorizontal className=\"size-4\" />,\n    },\n  ];\n\n  return (\n    <Sidebar variant=\"sidebar\" collapsible=\"icon\" className=\"mt-16\">\n      <SidebarHeader>\n        <div className={cn(isCollapsed ? \"py-2\" : \"p-2\")}>\n          <Button className={cn(isCollapsed ? \"h-8 w-8 p-0\" : \"w-full\")}>\n            <Plus className={cn(\"size-4\", !isCollapsed && \"mr-1\")} />\n            {!isCollapsed && <span>Create</span>}\n          </Button>\n        </div>\n      </SidebarHeader>\n\n      <SidebarContent>\n        {/* Main Nav Items */}\n        <SidebarGroup>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {mainNavItems.map((item) => (\n                <SidebarMenuItem key={item.href}>\n                  <SidebarMenuButton\n                    asChild\n                    isActive={\n                      pathname === item.href ||\n                      (pathname === \"\" && item.href === \"/\")\n                    }\n                    tooltip={item.title}\n                  >\n                    <Link href={item.href}>\n                      {item.icon}\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                  {item.badge && (\n                    <SidebarMenuBadge\n                      className={cn(\n                        \"border border-border bg-muted text-foreground\",\n                      )}\n                    >\n                      {item.badge.text}\n                    </SidebarMenuBadge>\n                  )}\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n\n        <SidebarSeparator />\n\n        {/* Tools Nav Items */}\n        <SidebarGroup>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {toolsNavItems.map((item) => (\n                <SidebarMenuItem key={item.href}>\n                  <SidebarMenuButton\n                    asChild\n                    isActive={pathname === item.href}\n                    tooltip={item.title}\n                  >\n                    <Link href={item.href}>\n                      {item.icon}\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                  {item.badge && (\n                    <SidebarMenuBadge\n                      className={cn(\n                        \"border border-border bg-muted text-foreground\",\n                      )}\n                    >\n                      {item.badge.text}\n                    </SidebarMenuBadge>\n                  )}\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/product-grid.tsx",
      "content": "\"use client\";\n\nimport { ShoppingCart } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\";\nimport type { Product } from \"@/lib/products\";\n\nexport default function ProductGrid({\n  categories,\n  products,\n}: { categories: string[]; products: Product[] }) {\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\n\n  const filteredProducts = selectedCategory\n    ? products.filter((product) => product.category === selectedCategory)\n    : products;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-wrap gap-2\">\n        <Button\n          variant={selectedCategory === null ? \"default\" : \"outline\"}\n          onClick={() => setSelectedCategory(null)}\n          className=\"rounded-full\"\n        >\n          All\n        </Button>\n\n        {categories.map((category) => (\n          <Button\n            key={category}\n            variant={selectedCategory === category ? \"default\" : \"outline\"}\n            onClick={() => setSelectedCategory(category)}\n            className=\"rounded-full\"\n          >\n            {category}\n          </Button>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\n        {filteredProducts.map((product) => (\n          <Card key={product.id} className=\"overflow-hidden p-0\">\n            <Link href={`/products/${product.id}`}>\n              <div className=\"flex aspect-square items-center justify-center bg-white p-6\" />\n            </Link>\n\n            <CardContent className=\"p-4\">\n              <Link href={`/products/${product.id}`}>\n                <h3 className=\"font-semibold\">{product.name}</h3>\n                <p className=\"line-clamp-2 text-gray-500 text-sm\">\n                  {product.description}\n                </p>\n              </Link>\n            </CardContent>\n\n            <CardFooter className=\"flex items-center justify-between p-4 pt-0\">\n              <div className=\"font-semibold\">${product.price.toFixed(2)}</div>\n              <Button size=\"sm\">\n                <ShoppingCart className=\"mr-2 size-4\" /> Add\n              </Button>\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/lib/products.ts",
      "content": "import { z } from \"zod\";\n\nconst ProductSchema = z.object({\n  id: z.number(),\n  name: z.string(),\n  price: z.number(),\n  description: z.string(),\n  category: z.string(),\n  brand: z.string(),\n  stock: z.number(),\n});\n\nexport type Product = z.infer<typeof ProductSchema>;\n\nexport async function getProducts(): Promise<Product[]> {\n  try {\n    const response = await fetch(\"https://api.vercel.app/products\");\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch products\");\n    }\n\n    const data = await response.json();\n\n    return z.array(ProductSchema).parse(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      console.error(\"Validation error:\", error.issues);\n    } else {\n      console.error(\"Error fetching products:\", error);\n    }\n    throw error;\n  }\n}\n\nexport async function getCategories(): Promise<string[]> {\n  try {\n    const products = await getProducts();\n    return Array.from(new Set(products.map((product) => product.category)));\n  } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n    throw error;\n  }\n}\n",
      "type": "registry:lib"
    }
  ]
}